R_PACKAGE=osp.leobert.android.davinci.viewer
BASE_VH_PACKAGE=osp.leobert.android.pandorasample.dvh
BASE_VH_NAME=AbsViewHolder
BASE_KT_VH_PACKAGE=osp.leobert.android.pandorasample.dvh
BASE_KT_VH_NAME=DataBindingViewHolder

##osp.leobert.android.pandorasample.dvh.DataBindingViewHolder
##
#MODEL_VO_IMPORT=import BASE_VH_PACKAGE.BASE_VH_NAME\n\
#import osp.leobert.android.pandora.rv.DataSet\n
##
##
#TEMPLATE_VH_IMPORT=import android.view.ViewGroup\n\
#import android.view.LayoutInflater\n\
#import androidx.databinding.DataBindingUtil\n\
#import osp.leobert.android.pandorasample.databinding.AppVh${NAME}Binding\n\
#import osp.leobert.android.pandora.rv.ViewHolderCreator\n\
#import osp.leobert.android.pandorasample.R\n\
#import BASE_KT_VH_PACKAGE.BASE_KT_VH_NAME
##
##
#TEMPLATE_VH_CREATOR=class ${NAME}VHCreator(private val itemInteract: ${NAME}ItemInteract?) : ViewHolderCreator() {\n\
#\n\
#~~~~override fun createViewHolder(parent: ViewGroup): DataBindingViewHolder<${NAME}VO2, AppVh${NAME}Binding> {\n\
#~~~~~~~~val binding = DataBindingUtil.inflate<AppVh${NAME}Binding>(\n\
#~~~~~~~~~~~~LayoutInflater.from(parent.context),\n\
#~~~~~~~~~~~~R.layout.app_vh_WIDGET_PREFIXLOWER_NAME, parent, false\n\
#~~~~~~~~)\n\
#\n\
#~~~~~~~~val vh = object : DataBindingViewHolder<${NAME}VO2, AppVh${NAME}Binding>(binding) {\n\
#\n\
#~~~~~~~~~~~~var mData: ${NAME}VO2? = null\n\
#\n\
#~~~~~~~~~~~~override fun setData(data: ${NAME}VO2?) {\n\
#~~~~~~~~~~~~~~~~super.setData(data)\n\
#~~~~~~~~~~~~~~~~mData = data\n\
#~~~~~~~~~~~~~~~~binding.vh = this\n\
#~~~~~~~~~~~~~~~~binding.vo = data\n\
#~~~~~~~~~~~~~~~~binding.executePendingBindings()\n\
#~~~~~~~~~~~~}\n\
#~~~~~~~~}\n\
#\n\
#~~~~~~~~binding.vh = vh\n\
#~~~~~~~~binding.itemInteract = itemInteract\n\
#\n\
#~~~~~~~~return vh\n\
#~~~~}\n\
#}
##
##
#TEMPLATE_REACTIVE_VH_CREATOR=class ${NAME}VHCreator(private val itemInteract: ${NAME}ItemInteract?) : ViewHolderCreator() {\n\
#\n\
#~~~~override fun createViewHolder(parent: ViewGroup): DataBindingViewHolder<${NAME}VO2, AppVh${NAME}Binding> {\n\
#~~~~~~~~val binding = DataBindingUtil.inflate<AppVh${NAME}Binding>(\n\
#~~~~~~~~~~~~LayoutInflater.from(parent.context),\n\
#~~~~~~~~~~~~R.layout.app_vh_WIDGET_PREFIXLOWER_NAME, parent, false\n\
#~~~~~~~~)\n\
#\n\
#~~~~~~~~val vh = object : DataBindingViewHolder<${NAME}VO2, AppVh${NAME}Binding>(binding),IReactiveViewHolder<${NAME}VO2> {\n\
#\n\
#~~~~~~~~~~~~var mData: ${NAME}VO2? = null\n\
#\n\
#~~~~~~~~~~~~override fun setData(data: ${NAME}VO2?) {\n\
#~~~~~~~~~~~~~~~~super.setData(data)\n\
#~~~~~~~~~~~~~~~~mData = data\n\
#~~~~~~~~~~~~~~~~binding.vh = this\n\
#~~~~~~~~~~~~~~~~binding.vo = data\n\
#~~~~~~~~~~~~~~~~binding.executePendingBindings()\n\
#~~~~~~~~~~~~}\n\
#\n\
#~~~~~~~~~~~~override fun getReactiveDataIfExist(): ReactiveData<out ${NAME}VO2, out IViewHolder<${NAME}VO2>>? = mData\n\
#\n\
#~~~~~~~~~~~~override fun accept(visitor: IViewHolder.Visitor) { visitor.visit(this)}\n\
#\n\
#~~~~~~~~~~~~override fun onPropertyChanged(sender: Observable?, data: ${NAME}VO2, propertyId: Int) {\n\
#~~~~~~~~~~~~~~ TODO(\"not implemented\") //To change body of created functions use File | Settings | File Templates.\n\
#~~~~~~~~~~~~}\n\
#~~~~~~~~}\n\
#\n\
#~~~~~~~~binding.vh = vh\n\
#~~~~~~~~binding.itemInteract = itemInteract\n\
#\n\
#~~~~~~~~return vh\n\
#~~~~}\n\
#}